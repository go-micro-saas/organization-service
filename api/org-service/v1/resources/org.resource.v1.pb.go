// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.34.2
// 	protoc        v6.30.2
// source: api/org-service/v1/resources/org.resource.v1.proto

package resourcev1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	enums "github.com/go-micro-saas/organization-service/api/org-service/v1/enums"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type PingReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PingReq) Reset() {
	*x = PingReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingReq) ProtoMessage() {}

func (x *PingReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingReq.ProtoReflect.Descriptor instead.
func (*PingReq) Descriptor() ([]byte, []int) {
	return file_api_org_service_v1_resources_org_resource_v1_proto_rawDescGZIP(), []int{0}
}

func (x *PingReq) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PingResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32             `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Reason   string            `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Message  string            `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Metadata map[string]string `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Data     *PingRespData     `protobuf:"bytes,100,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *PingResp) Reset() {
	*x = PingResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResp) ProtoMessage() {}

func (x *PingResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResp.ProtoReflect.Descriptor instead.
func (*PingResp) Descriptor() ([]byte, []int) {
	return file_api_org_service_v1_resources_org_resource_v1_proto_rawDescGZIP(), []int{1}
}

func (x *PingResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *PingResp) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *PingResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PingResp) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *PingResp) GetData() *PingRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type PingRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message string `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
}

func (x *PingRespData) Reset() {
	*x = PingRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PingRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRespData) ProtoMessage() {}

func (x *PingRespData) ProtoReflect() protoreflect.Message {
	mi := &file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRespData.ProtoReflect.Descriptor instead.
func (*PingRespData) Descriptor() ([]byte, []int) {
	return file_api_org_service_v1_resources_org_resource_v1_proto_rawDescGZIP(), []int{2}
}

func (x *PingRespData) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// Org ENGINE InnoDB CHARSET utf8mb4 COMMENT '组织'
type Org struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              uint64                        `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedTime     string                        `protobuf:"bytes,2,opt,name=created_time,json=createdTime,proto3" json:"created_time,omitempty"`
	UpdatedTime     string                        `protobuf:"bytes,3,opt,name=updated_time,json=updatedTime,proto3" json:"updated_time,omitempty"`
	DeletedTime     uint64                        `protobuf:"varint,4,opt,name=deleted_time,json=deletedTime,proto3" json:"deleted_time,omitempty"`
	OrgId           uint64                        `protobuf:"varint,5,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	OrgName         string                        `protobuf:"bytes,6,opt,name=org_name,json=orgName,proto3" json:"org_name,omitempty"`
	OrgAvatar       string                        `protobuf:"bytes,7,opt,name=org_avatar,json=orgAvatar,proto3" json:"org_avatar,omitempty"`
	OrgContactName  string                        `protobuf:"bytes,8,opt,name=org_contact_name,json=orgContactName,proto3" json:"org_contact_name,omitempty"`
	OrgContactPhone string                        `protobuf:"bytes,9,opt,name=org_contact_phone,json=orgContactPhone,proto3" json:"org_contact_phone,omitempty"`
	OrgContactEmail string                        `protobuf:"bytes,10,opt,name=org_contact_email,json=orgContactEmail,proto3" json:"org_contact_email,omitempty"`
	OrgType         enums.OrgTypeEnum_OrgType     `protobuf:"varint,11,opt,name=org_type,json=orgType,proto3,enum=saas.api.org.enumv1.OrgTypeEnum_OrgType" json:"org_type,omitempty"`
	OrgStatus       enums.OrgStatusEnum_OrgStatus `protobuf:"varint,12,opt,name=org_status,json=orgStatus,proto3,enum=saas.api.org.enumv1.OrgStatusEnum_OrgStatus" json:"org_status,omitempty"`
	OrgIndustryId   uint64                        `protobuf:"varint,13,opt,name=org_industry_id,json=orgIndustryId,proto3" json:"org_industry_id,omitempty"`
	OrgScaleId      uint64                        `protobuf:"varint,14,opt,name=org_scale_id,json=orgScaleId,proto3" json:"org_scale_id,omitempty"`
	OrgAddress      string                        `protobuf:"bytes,15,opt,name=org_address,json=orgAddress,proto3" json:"org_address,omitempty"`
	OrgZipCode      string                        `protobuf:"bytes,16,opt,name=org_zip_code,json=orgZipCode,proto3" json:"org_zip_code,omitempty"`
	OrgCreatorId    uint64                        `protobuf:"varint,17,opt,name=org_creator_id,json=orgCreatorId,proto3" json:"org_creator_id,omitempty"`
}

func (x *Org) Reset() {
	*x = Org{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Org) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Org) ProtoMessage() {}

func (x *Org) ProtoReflect() protoreflect.Message {
	mi := &file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Org.ProtoReflect.Descriptor instead.
func (*Org) Descriptor() ([]byte, []int) {
	return file_api_org_service_v1_resources_org_resource_v1_proto_rawDescGZIP(), []int{3}
}

func (x *Org) GetId() uint64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Org) GetCreatedTime() string {
	if x != nil {
		return x.CreatedTime
	}
	return ""
}

func (x *Org) GetUpdatedTime() string {
	if x != nil {
		return x.UpdatedTime
	}
	return ""
}

func (x *Org) GetDeletedTime() uint64 {
	if x != nil {
		return x.DeletedTime
	}
	return 0
}

func (x *Org) GetOrgId() uint64 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *Org) GetOrgName() string {
	if x != nil {
		return x.OrgName
	}
	return ""
}

func (x *Org) GetOrgAvatar() string {
	if x != nil {
		return x.OrgAvatar
	}
	return ""
}

func (x *Org) GetOrgContactName() string {
	if x != nil {
		return x.OrgContactName
	}
	return ""
}

func (x *Org) GetOrgContactPhone() string {
	if x != nil {
		return x.OrgContactPhone
	}
	return ""
}

func (x *Org) GetOrgContactEmail() string {
	if x != nil {
		return x.OrgContactEmail
	}
	return ""
}

func (x *Org) GetOrgType() enums.OrgTypeEnum_OrgType {
	if x != nil {
		return x.OrgType
	}
	return enums.OrgTypeEnum_OrgType(0)
}

func (x *Org) GetOrgStatus() enums.OrgStatusEnum_OrgStatus {
	if x != nil {
		return x.OrgStatus
	}
	return enums.OrgStatusEnum_OrgStatus(0)
}

func (x *Org) GetOrgIndustryId() uint64 {
	if x != nil {
		return x.OrgIndustryId
	}
	return 0
}

func (x *Org) GetOrgScaleId() uint64 {
	if x != nil {
		return x.OrgScaleId
	}
	return 0
}

func (x *Org) GetOrgAddress() string {
	if x != nil {
		return x.OrgAddress
	}
	return ""
}

func (x *Org) GetOrgZipCode() string {
	if x != nil {
		return x.OrgZipCode
	}
	return ""
}

func (x *Org) GetOrgCreatorId() uint64 {
	if x != nil {
		return x.OrgCreatorId
	}
	return 0
}

type CreateOrgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatorId     uint64                    `protobuf:"varint,100,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`                                      // 创建人ID
	CreatorName   string                    `protobuf:"bytes,101,opt,name=creator_name,json=creatorName,proto3" json:"creator_name,omitempty"`                                 // 组织名称
	CreatorAvatar string                    `protobuf:"bytes,102,opt,name=creator_avatar,json=creatorAvatar,proto3" json:"creator_avatar,omitempty"`                           // 组织头像
	OrgName       string                    `protobuf:"bytes,1,opt,name=org_name,json=orgName,proto3" json:"org_name,omitempty"`                                               // 组织名称
	OrgAvatar     string                    `protobuf:"bytes,2,opt,name=org_avatar,json=orgAvatar,proto3" json:"org_avatar,omitempty"`                                         // 组织头像
	OrgType       enums.OrgTypeEnum_OrgType `protobuf:"varint,3,opt,name=org_type,json=orgType,proto3,enum=saas.api.org.enumv1.OrgTypeEnum_OrgType" json:"org_type,omitempty"` // 组织类型
}

func (x *CreateOrgReq) Reset() {
	*x = CreateOrgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrgReq) ProtoMessage() {}

func (x *CreateOrgReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrgReq.ProtoReflect.Descriptor instead.
func (*CreateOrgReq) Descriptor() ([]byte, []int) {
	return file_api_org_service_v1_resources_org_resource_v1_proto_rawDescGZIP(), []int{4}
}

func (x *CreateOrgReq) GetCreatorId() uint64 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

func (x *CreateOrgReq) GetCreatorName() string {
	if x != nil {
		return x.CreatorName
	}
	return ""
}

func (x *CreateOrgReq) GetCreatorAvatar() string {
	if x != nil {
		return x.CreatorAvatar
	}
	return ""
}

func (x *CreateOrgReq) GetOrgName() string {
	if x != nil {
		return x.OrgName
	}
	return ""
}

func (x *CreateOrgReq) GetOrgAvatar() string {
	if x != nil {
		return x.OrgAvatar
	}
	return ""
}

func (x *CreateOrgReq) GetOrgType() enums.OrgTypeEnum_OrgType {
	if x != nil {
		return x.OrgType
	}
	return enums.OrgTypeEnum_OrgType(0)
}

type OnlyCreateOrgReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CreatorId uint64                    `protobuf:"varint,100,opt,name=creator_id,json=creatorId,proto3" json:"creator_id,omitempty"`                                      // 创建人ID
	OrgName   string                    `protobuf:"bytes,1,opt,name=org_name,json=orgName,proto3" json:"org_name,omitempty"`                                               // 组织名称
	OrgAvatar string                    `protobuf:"bytes,2,opt,name=org_avatar,json=orgAvatar,proto3" json:"org_avatar,omitempty"`                                         // 组织头像
	OrgType   enums.OrgTypeEnum_OrgType `protobuf:"varint,3,opt,name=org_type,json=orgType,proto3,enum=saas.api.org.enumv1.OrgTypeEnum_OrgType" json:"org_type,omitempty"` // 组织类型
}

func (x *OnlyCreateOrgReq) Reset() {
	*x = OnlyCreateOrgReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *OnlyCreateOrgReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*OnlyCreateOrgReq) ProtoMessage() {}

func (x *OnlyCreateOrgReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use OnlyCreateOrgReq.ProtoReflect.Descriptor instead.
func (*OnlyCreateOrgReq) Descriptor() ([]byte, []int) {
	return file_api_org_service_v1_resources_org_resource_v1_proto_rawDescGZIP(), []int{5}
}

func (x *OnlyCreateOrgReq) GetCreatorId() uint64 {
	if x != nil {
		return x.CreatorId
	}
	return 0
}

func (x *OnlyCreateOrgReq) GetOrgName() string {
	if x != nil {
		return x.OrgName
	}
	return ""
}

func (x *OnlyCreateOrgReq) GetOrgAvatar() string {
	if x != nil {
		return x.OrgAvatar
	}
	return ""
}

func (x *OnlyCreateOrgReq) GetOrgType() enums.OrgTypeEnum_OrgType {
	if x != nil {
		return x.OrgType
	}
	return enums.OrgTypeEnum_OrgType(0)
}

type CreateOrgResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32              `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Reason   string             `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Message  string             `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Metadata map[string]string  `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Data     *CreateOrgRespData `protobuf:"bytes,100,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *CreateOrgResp) Reset() {
	*x = CreateOrgResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrgResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrgResp) ProtoMessage() {}

func (x *CreateOrgResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrgResp.ProtoReflect.Descriptor instead.
func (*CreateOrgResp) Descriptor() ([]byte, []int) {
	return file_api_org_service_v1_resources_org_resource_v1_proto_rawDescGZIP(), []int{6}
}

func (x *CreateOrgResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *CreateOrgResp) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *CreateOrgResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateOrgResp) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *CreateOrgResp) GetData() *CreateOrgRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type CreateOrgRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId     uint64                    `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	OrgName   string                    `protobuf:"bytes,2,opt,name=org_name,json=orgName,proto3" json:"org_name,omitempty"`
	OrgAvatar string                    `protobuf:"bytes,3,opt,name=org_avatar,json=orgAvatar,proto3" json:"org_avatar,omitempty"`
	OrgType   enums.OrgTypeEnum_OrgType `protobuf:"varint,4,opt,name=org_type,json=orgType,proto3,enum=saas.api.org.enumv1.OrgTypeEnum_OrgType" json:"org_type,omitempty"`
}

func (x *CreateOrgRespData) Reset() {
	*x = CreateOrgRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateOrgRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateOrgRespData) ProtoMessage() {}

func (x *CreateOrgRespData) ProtoReflect() protoreflect.Message {
	mi := &file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateOrgRespData.ProtoReflect.Descriptor instead.
func (*CreateOrgRespData) Descriptor() ([]byte, []int) {
	return file_api_org_service_v1_resources_org_resource_v1_proto_rawDescGZIP(), []int{7}
}

func (x *CreateOrgRespData) GetOrgId() uint64 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *CreateOrgRespData) GetOrgName() string {
	if x != nil {
		return x.OrgName
	}
	return ""
}

func (x *CreateOrgRespData) GetOrgAvatar() string {
	if x != nil {
		return x.OrgAvatar
	}
	return ""
}

func (x *CreateOrgRespData) GetOrgType() enums.OrgTypeEnum_OrgType {
	if x != nil {
		return x.OrgType
	}
	return enums.OrgTypeEnum_OrgType(0)
}

type AddEmployeeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OperatorUid  uint64                                    `protobuf:"varint,100,opt,name=operator_uid,json=operatorUid,proto3" json:"operator_uid,omitempty"`                                                               // 操作人ID
	OrgId        uint64                                    `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`                                                                                   // 组织ID
	UserId       uint64                                    `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                                                                // 成员ID
	UserName     string                                    `protobuf:"bytes,3,opt,name=user_name,json=userName,proto3" json:"user_name,omitempty"`                                                                           // 成员名称
	EmployeeRole enums.OrgEmployeeRoleEnum_OrgEmployeeRole `protobuf:"varint,4,opt,name=employee_role,json=employeeRole,proto3,enum=saas.api.org.enumv1.OrgEmployeeRoleEnum_OrgEmployeeRole" json:"employee_role,omitempty"` // 成员角色
	UserAvatar   string                                    `protobuf:"bytes,5,opt,name=user_avatar,json=userAvatar,proto3" json:"user_avatar,omitempty"`                                                                     // 成员头像
	UserPhone    string                                    `protobuf:"bytes,6,opt,name=user_phone,json=userPhone,proto3" json:"user_phone,omitempty"`                                                                        // 成员电话
	UserEmail    string                                    `protobuf:"bytes,7,opt,name=user_email,json=userEmail,proto3" json:"user_email,omitempty"`                                                                        // 成员邮箱
}

func (x *AddEmployeeReq) Reset() {
	*x = AddEmployeeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddEmployeeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEmployeeReq) ProtoMessage() {}

func (x *AddEmployeeReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEmployeeReq.ProtoReflect.Descriptor instead.
func (*AddEmployeeReq) Descriptor() ([]byte, []int) {
	return file_api_org_service_v1_resources_org_resource_v1_proto_rawDescGZIP(), []int{8}
}

func (x *AddEmployeeReq) GetOperatorUid() uint64 {
	if x != nil {
		return x.OperatorUid
	}
	return 0
}

func (x *AddEmployeeReq) GetOrgId() uint64 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *AddEmployeeReq) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddEmployeeReq) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *AddEmployeeReq) GetEmployeeRole() enums.OrgEmployeeRoleEnum_OrgEmployeeRole {
	if x != nil {
		return x.EmployeeRole
	}
	return enums.OrgEmployeeRoleEnum_OrgEmployeeRole(0)
}

func (x *AddEmployeeReq) GetUserAvatar() string {
	if x != nil {
		return x.UserAvatar
	}
	return ""
}

func (x *AddEmployeeReq) GetUserPhone() string {
	if x != nil {
		return x.UserPhone
	}
	return ""
}

func (x *AddEmployeeReq) GetUserEmail() string {
	if x != nil {
		return x.UserEmail
	}
	return ""
}

type AddEmployeeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32                `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Reason   string               `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Message  string               `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Metadata map[string]string    `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Data     *AddEmployeeRespData `protobuf:"bytes,100,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *AddEmployeeResp) Reset() {
	*x = AddEmployeeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddEmployeeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEmployeeResp) ProtoMessage() {}

func (x *AddEmployeeResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEmployeeResp.ProtoReflect.Descriptor instead.
func (*AddEmployeeResp) Descriptor() ([]byte, []int) {
	return file_api_org_service_v1_resources_org_resource_v1_proto_rawDescGZIP(), []int{9}
}

func (x *AddEmployeeResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *AddEmployeeResp) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *AddEmployeeResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *AddEmployeeResp) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *AddEmployeeResp) GetData() *AddEmployeeRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type AddEmployeeRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId          uint64                                        `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	UserId         uint64                                        `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EmployeeId     uint64                                        `protobuf:"varint,3,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	EmployeeName   string                                        `protobuf:"bytes,4,opt,name=employee_name,json=employeeName,proto3" json:"employee_name,omitempty"`
	EmployeeAvatar string                                        `protobuf:"bytes,5,opt,name=employee_avatar,json=employeeAvatar,proto3" json:"employee_avatar,omitempty"`
	EmployeeStatus enums.OrgEmployeeStatusEnum_OrgEmployeeStatus `protobuf:"varint,6,opt,name=employee_status,json=employeeStatus,proto3,enum=saas.api.org.enumv1.OrgEmployeeStatusEnum_OrgEmployeeStatus" json:"employee_status,omitempty"` // 成员状态
	EmployeeRole   enums.OrgEmployeeRoleEnum_OrgEmployeeRole     `protobuf:"varint,7,opt,name=employee_role,json=employeeRole,proto3,enum=saas.api.org.enumv1.OrgEmployeeRoleEnum_OrgEmployeeRole" json:"employee_role,omitempty"`           // 成员角色
}

func (x *AddEmployeeRespData) Reset() {
	*x = AddEmployeeRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddEmployeeRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddEmployeeRespData) ProtoMessage() {}

func (x *AddEmployeeRespData) ProtoReflect() protoreflect.Message {
	mi := &file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddEmployeeRespData.ProtoReflect.Descriptor instead.
func (*AddEmployeeRespData) Descriptor() ([]byte, []int) {
	return file_api_org_service_v1_resources_org_resource_v1_proto_rawDescGZIP(), []int{10}
}

func (x *AddEmployeeRespData) GetOrgId() uint64 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *AddEmployeeRespData) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *AddEmployeeRespData) GetEmployeeId() uint64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *AddEmployeeRespData) GetEmployeeName() string {
	if x != nil {
		return x.EmployeeName
	}
	return ""
}

func (x *AddEmployeeRespData) GetEmployeeAvatar() string {
	if x != nil {
		return x.EmployeeAvatar
	}
	return ""
}

func (x *AddEmployeeRespData) GetEmployeeStatus() enums.OrgEmployeeStatusEnum_OrgEmployeeStatus {
	if x != nil {
		return x.EmployeeStatus
	}
	return enums.OrgEmployeeStatusEnum_OrgEmployeeStatus(0)
}

func (x *AddEmployeeRespData) GetEmployeeRole() enums.OrgEmployeeRoleEnum_OrgEmployeeRole {
	if x != nil {
		return x.EmployeeRole
	}
	return enums.OrgEmployeeRoleEnum_OrgEmployeeRole(0)
}

type InviteEmployeeReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InviteId uint64 `protobuf:"varint,100,opt,name=invite_id,json=inviteId,proto3" json:"invite_id,omitempty"` // 邀请ID
}

func (x *InviteEmployeeReq) Reset() {
	*x = InviteEmployeeReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteEmployeeReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteEmployeeReq) ProtoMessage() {}

func (x *InviteEmployeeReq) ProtoReflect() protoreflect.Message {
	mi := &file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteEmployeeReq.ProtoReflect.Descriptor instead.
func (*InviteEmployeeReq) Descriptor() ([]byte, []int) {
	return file_api_org_service_v1_resources_org_resource_v1_proto_rawDescGZIP(), []int{11}
}

func (x *InviteEmployeeReq) GetInviteId() uint64 {
	if x != nil {
		return x.InviteId
	}
	return 0
}

type InviteEmployeeResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code     int32                   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Reason   string                  `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	Message  string                  `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	Metadata map[string]string       `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	Data     *InviteEmployeeRespData `protobuf:"bytes,100,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *InviteEmployeeResp) Reset() {
	*x = InviteEmployeeResp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteEmployeeResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteEmployeeResp) ProtoMessage() {}

func (x *InviteEmployeeResp) ProtoReflect() protoreflect.Message {
	mi := &file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteEmployeeResp.ProtoReflect.Descriptor instead.
func (*InviteEmployeeResp) Descriptor() ([]byte, []int) {
	return file_api_org_service_v1_resources_org_resource_v1_proto_rawDescGZIP(), []int{12}
}

func (x *InviteEmployeeResp) GetCode() int32 {
	if x != nil {
		return x.Code
	}
	return 0
}

func (x *InviteEmployeeResp) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

func (x *InviteEmployeeResp) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *InviteEmployeeResp) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *InviteEmployeeResp) GetData() *InviteEmployeeRespData {
	if x != nil {
		return x.Data
	}
	return nil
}

type InviteEmployeeRespData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	OrgId          uint64                                        `protobuf:"varint,1,opt,name=org_id,json=orgId,proto3" json:"org_id,omitempty"`
	UserId         uint64                                        `protobuf:"varint,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	EmployeeId     uint64                                        `protobuf:"varint,3,opt,name=employee_id,json=employeeId,proto3" json:"employee_id,omitempty"`
	EmployeeName   string                                        `protobuf:"bytes,4,opt,name=employee_name,json=employeeName,proto3" json:"employee_name,omitempty"`
	EmployeeAvatar string                                        `protobuf:"bytes,5,opt,name=employee_avatar,json=employeeAvatar,proto3" json:"employee_avatar,omitempty"`
	EmployeeStatus enums.OrgEmployeeStatusEnum_OrgEmployeeStatus `protobuf:"varint,6,opt,name=employee_status,json=employeeStatus,proto3,enum=saas.api.org.enumv1.OrgEmployeeStatusEnum_OrgEmployeeStatus" json:"employee_status,omitempty"` // 成员状态
	EmployeeRole   enums.OrgEmployeeRoleEnum_OrgEmployeeRole     `protobuf:"varint,7,opt,name=employee_role,json=employeeRole,proto3,enum=saas.api.org.enumv1.OrgEmployeeRoleEnum_OrgEmployeeRole" json:"employee_role,omitempty"`           // 成员角色
}

func (x *InviteEmployeeRespData) Reset() {
	*x = InviteEmployeeRespData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InviteEmployeeRespData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InviteEmployeeRespData) ProtoMessage() {}

func (x *InviteEmployeeRespData) ProtoReflect() protoreflect.Message {
	mi := &file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InviteEmployeeRespData.ProtoReflect.Descriptor instead.
func (*InviteEmployeeRespData) Descriptor() ([]byte, []int) {
	return file_api_org_service_v1_resources_org_resource_v1_proto_rawDescGZIP(), []int{13}
}

func (x *InviteEmployeeRespData) GetOrgId() uint64 {
	if x != nil {
		return x.OrgId
	}
	return 0
}

func (x *InviteEmployeeRespData) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *InviteEmployeeRespData) GetEmployeeId() uint64 {
	if x != nil {
		return x.EmployeeId
	}
	return 0
}

func (x *InviteEmployeeRespData) GetEmployeeName() string {
	if x != nil {
		return x.EmployeeName
	}
	return ""
}

func (x *InviteEmployeeRespData) GetEmployeeAvatar() string {
	if x != nil {
		return x.EmployeeAvatar
	}
	return ""
}

func (x *InviteEmployeeRespData) GetEmployeeStatus() enums.OrgEmployeeStatusEnum_OrgEmployeeStatus {
	if x != nil {
		return x.EmployeeStatus
	}
	return enums.OrgEmployeeStatusEnum_OrgEmployeeStatus(0)
}

func (x *InviteEmployeeRespData) GetEmployeeRole() enums.OrgEmployeeRoleEnum_OrgEmployeeRole {
	if x != nil {
		return x.EmployeeRole
	}
	return enums.OrgEmployeeRoleEnum_OrgEmployeeRole(0)
}

var File_api_org_service_v1_resources_org_resource_v1_proto protoreflect.FileDescriptor

var file_api_org_service_v1_resources_org_resource_v1_proto_rawDesc = []byte{
	0x0a, 0x32, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x72, 0x67, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x2f, 0x76, 0x31, 0x2f, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x2f, 0x6f,
	0x72, 0x67, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x17, 0x73, 0x61, 0x61, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f,
	0x72, 0x67, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x76, 0x31, 0x1a, 0x17, 0x76,
	0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x2a, 0x61, 0x70, 0x69, 0x2f, 0x6f, 0x72, 0x67, 0x2d,
	0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x65, 0x6e, 0x75, 0x6d, 0x73,
	0x2f, 0x6f, 0x72, 0x67, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x76, 0x31, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x23, 0x0a, 0x07, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x95, 0x02, 0x0a, 0x08, 0x50, 0x69, 0x6e, 0x67,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73,
	0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x4b, 0x0a, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x73,
	0x61, 0x61, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x65, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x76, 0x31, 0x2e, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x39, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x25, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x76, 0x31, 0x2e,
	0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61,
	0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22,
	0x28, 0x0a, 0x0c, 0x50, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12,
	0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x96, 0x05, 0x0a, 0x03, 0x4f, 0x72,
	0x67, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x69,
	0x64, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x5f,
	0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72,
	0x67, 0x5f, 0x69, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x6f, 0x72, 0x67, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6f, 0x72, 0x67, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x28, 0x0a, 0x10, 0x6f,
	0x72, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x6f, 0x72, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6f, 0x72, 0x67, 0x5f, 0x63, 0x6f, 0x6e,
	0x74, 0x61, 0x63, 0x74, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x6f, 0x72, 0x67, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x50, 0x68, 0x6f, 0x6e,
	0x65, 0x12, 0x2a, 0x0a, 0x11, 0x6f, 0x72, 0x67, 0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74,
	0x5f, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x6f, 0x72,
	0x67, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x63, 0x74, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x43, 0x0a,
	0x08, 0x6f, 0x72, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x28, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x65,
	0x6e, 0x75, 0x6d, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x67, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75,
	0x6d, 0x2e, 0x4f, 0x72, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x4b, 0x0a, 0x0a, 0x6f, 0x72, 0x67, 0x5f, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x2c, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x2e, 0x61, 0x70,
	0x69, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x67,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x4f, 0x72, 0x67, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x09, 0x6f, 0x72, 0x67, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x26, 0x0a, 0x0f, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x6e, 0x64, 0x75, 0x73, 0x74, 0x72, 0x79, 0x5f,
	0x69, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x6f, 0x72, 0x67, 0x49, 0x6e, 0x64,
	0x75, 0x73, 0x74, 0x72, 0x79, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x72, 0x67, 0x5f, 0x73,
	0x63, 0x61, 0x6c, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x6f,
	0x72, 0x67, 0x53, 0x63, 0x61, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6f, 0x72, 0x67,
	0x5f, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a,
	0x6f, 0x72, 0x67, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x6f, 0x72,
	0x67, 0x5f, 0x7a, 0x69, 0x70, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x6f, 0x72, 0x67, 0x5a, 0x69, 0x70, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0e,
	0x6f, 0x72, 0x67, 0x5f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x11,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x6f, 0x72, 0x67, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72,
	0x49, 0x64, 0x22, 0xaf, 0x02, 0x0a, 0x0c, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67,
	0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69,
	0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00,
	0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49, 0x64, 0x12, 0x2a, 0x0a, 0x0c, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x65, 0x20, 0x01, 0x28,
	0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x0b, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x6f, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x0e, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x66, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xd0, 0x01, 0x01, 0x52, 0x0d, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x22, 0x0a, 0x08, 0x6f, 0x72, 0x67, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72,
	0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0a,
	0x6f, 0x72, 0x67, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xd0, 0x01, 0x01, 0x52, 0x09, 0x6f, 0x72, 0x67, 0x41,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x4d, 0x0a, 0x08, 0x6f, 0x72, 0x67, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x76, 0x31, 0x2e, 0x4f, 0x72,
	0x67, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x4f, 0x72, 0x67, 0x54, 0x79, 0x70,
	0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02, 0x20, 0x00, 0x52, 0x07, 0x6f, 0x72, 0x67,
	0x54, 0x79, 0x70, 0x65, 0x22, 0xd6, 0x01, 0x0a, 0x10, 0x4f, 0x6e, 0x6c, 0x79, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x71, 0x12, 0x26, 0x0a, 0x0a, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x6f, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa,
	0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f, 0x72, 0x49,
	0x64, 0x12, 0x22, 0x0a, 0x08, 0x6f, 0x72, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x07, 0x6f, 0x72,
	0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0a, 0x6f, 0x72, 0x67, 0x5f, 0x61, 0x76, 0x61,
	0x74, 0x61, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03,
	0xd0, 0x01, 0x01, 0x52, 0x09, 0x6f, 0x72, 0x67, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x4d,
	0x0a, 0x08, 0x6f, 0x72, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x28, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x65, 0x6e, 0x75, 0x6d, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x67, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e,
	0x75, 0x6d, 0x2e, 0x4f, 0x72, 0x67, 0x54, 0x79, 0x70, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82,
	0x01, 0x02, 0x20, 0x00, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x54, 0x79, 0x70, 0x65, 0x22, 0xa4, 0x02,
	0x0a, 0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x50, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x34, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x2e, 0x61,
	0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x76,
	0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x73, 0x70, 0x2e,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x3e, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2a, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x2e, 0x61, 0x70, 0x69,
	0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x76, 0x31, 0x2e,
	0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f, 0x72, 0x67, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74,
	0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x3a, 0x02, 0x38, 0x01, 0x22, 0xa9, 0x01, 0x0a, 0x11, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x4f,
	0x72, 0x67, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72,
	0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49,
	0x64, 0x12, 0x19, 0x0a, 0x08, 0x6f, 0x72, 0x67, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1d, 0x0a, 0x0a,
	0x6f, 0x72, 0x67, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x6f, 0x72, 0x67, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x43, 0x0a, 0x08, 0x6f,
	0x72, 0x67, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e,
	0x73, 0x61, 0x61, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x65, 0x6e, 0x75,
	0x6d, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x67, 0x54, 0x79, 0x70, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x2e,
	0x4f, 0x72, 0x67, 0x54, 0x79, 0x70, 0x65, 0x52, 0x07, 0x6f, 0x72, 0x67, 0x54, 0x79, 0x70, 0x65,
	0x22, 0x8a, 0x03, 0x0a, 0x0e, 0x41, 0x64, 0x64, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65,
	0x52, 0x65, 0x71, 0x12, 0x2a, 0x0a, 0x0c, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x5f,
	0x75, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x04, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02,
	0x20, 0x00, 0x52, 0x0b, 0x6f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x55, 0x69, 0x64, 0x12,
	0x1e, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x42, 0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x24, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x07, 0xfa, 0x42, 0x04, 0x72, 0x02, 0x10, 0x01, 0x52, 0x08, 0x75,
	0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x67, 0x0a, 0x0d, 0x65, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x38,
	0x2e, 0x73, 0x61, 0x61, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x65, 0x6e,
	0x75, 0x6d, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x67, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65,
	0x52, 0x6f, 0x6c, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x4f, 0x72, 0x67, 0x45, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x82, 0x01, 0x02,
	0x20, 0x00, 0x52, 0x0c, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x6f, 0x6c, 0x65,
	0x12, 0x29, 0x0a, 0x0b, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xd0, 0x01, 0x01, 0x52,
	0x0a, 0x75, 0x73, 0x65, 0x72, 0x41, 0x76, 0x61, 0x74, 0x61, 0x72, 0x12, 0x27, 0x0a, 0x0a, 0x75,
	0x73, 0x65, 0x72, 0x5f, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x42,
	0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xd0, 0x01, 0x01, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x50,
	0x68, 0x6f, 0x6e, 0x65, 0x12, 0x27, 0x0a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x42, 0x08, 0xfa, 0x42, 0x05, 0x72, 0x03, 0xd0,
	0x01, 0x01, 0x52, 0x09, 0x75, 0x73, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0xaa, 0x02,
	0x0a, 0x0f, 0x41, 0x64, 0x64, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x52, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x36, 0x2e, 0x73, 0x61, 0x61, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x2e, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72,
	0x79, 0x52, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x64, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2c, 0x2e, 0x73, 0x61, 0x61, 0x73,
	0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a,
	0x0d, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xfa, 0x02, 0x0a, 0x13, 0x41,
	0x64, 0x64, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x44, 0x61,
	0x74, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x04, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65,
	0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x69,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x65, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x41, 0x76, 0x61, 0x74, 0x61,
	0x72, 0x12, 0x65, 0x0a, 0x0f, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3c, 0x2e, 0x73, 0x61, 0x61,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x76, 0x31,
	0x2e, 0x4f, 0x72, 0x67, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x4f, 0x72, 0x67, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x5d, 0x0a, 0x0d, 0x65, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x65, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x38, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x65,
	0x6e, 0x75, 0x6d, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x67, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65,
	0x65, 0x52, 0x6f, 0x6c, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x4f, 0x72, 0x67, 0x45, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x0c, 0x65, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x22, 0x39, 0x0a, 0x11, 0x49, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x71, 0x12, 0x24, 0x0a, 0x09,
	0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x64, 0x20, 0x01, 0x28, 0x04, 0x42,
	0x07, 0xfa, 0x42, 0x04, 0x32, 0x02, 0x20, 0x00, 0x52, 0x08, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65,
	0x49, 0x64, 0x22, 0xb3, 0x02, 0x0a, 0x12, 0x49, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x45, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72,
	0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12,
	0x55, 0x0a, 0x08, 0x6d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x39, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67,
	0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x76, 0x31, 0x2e, 0x49, 0x6e, 0x76, 0x69,
	0x74, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x2e, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x08, 0x6d, 0x65,
	0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x43, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x64,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x2f, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e,
	0x6f, 0x72, 0x67, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x76, 0x31, 0x2e, 0x49,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x1a, 0x3b, 0x0a, 0x0d, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03,
	0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14,
	0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xfd, 0x02, 0x0a, 0x16, 0x49, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x65, 0x73, 0x70, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x15, 0x0a, 0x06, 0x6f, 0x72, 0x67, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x04, 0x52, 0x05, 0x6f, 0x72, 0x67, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73,
	0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f,
	0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0a, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x65, 0x49, 0x64, 0x12, 0x23, 0x0a, 0x0d, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65,
	0x5f, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x27, 0x0a, 0x0f, 0x65, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x41, 0x76, 0x61, 0x74,
	0x61, 0x72, 0x12, 0x65, 0x0a, 0x0f, 0x65, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x3c, 0x2e, 0x73, 0x61,
	0x61, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x65, 0x6e, 0x75, 0x6d, 0x76,
	0x31, 0x2e, 0x4f, 0x72, 0x67, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x4f, 0x72, 0x67, 0x45, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0e, 0x65, 0x6d, 0x70, 0x6c, 0x6f,
	0x79, 0x65, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x5d, 0x0a, 0x0d, 0x65, 0x6d, 0x70,
	0x6c, 0x6f, 0x79, 0x65, 0x65, 0x5f, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x38, 0x2e, 0x73, 0x61, 0x61, 0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x2e,
	0x65, 0x6e, 0x75, 0x6d, 0x76, 0x31, 0x2e, 0x4f, 0x72, 0x67, 0x45, 0x6d, 0x70, 0x6c, 0x6f, 0x79,
	0x65, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x45, 0x6e, 0x75, 0x6d, 0x2e, 0x4f, 0x72, 0x67, 0x45, 0x6d,
	0x70, 0x6c, 0x6f, 0x79, 0x65, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x52, 0x0c, 0x65, 0x6d, 0x70, 0x6c,
	0x6f, 0x79, 0x65, 0x65, 0x52, 0x6f, 0x6c, 0x65, 0x42, 0x88, 0x01, 0x0a, 0x17, 0x73, 0x61, 0x61,
	0x73, 0x2e, 0x61, 0x70, 0x69, 0x2e, 0x6f, 0x72, 0x67, 0x2e, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x76, 0x31, 0x42, 0x14, 0x53, 0x61, 0x61, 0x73, 0x41, 0x70, 0x69, 0x4f, 0x72, 0x67,
	0x52, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x56, 0x31, 0x50, 0x01, 0x5a, 0x55, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x67, 0x6f, 0x2d, 0x6d, 0x69, 0x63, 0x72,
	0x6f, 0x2d, 0x73, 0x61, 0x61, 0x73, 0x2f, 0x6f, 0x72, 0x67, 0x61, 0x6e, 0x69, 0x7a, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x6f, 0x72, 0x67, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x72,
	0x65, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x73, 0x3b, 0x72, 0x65, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_api_org_service_v1_resources_org_resource_v1_proto_rawDescOnce sync.Once
	file_api_org_service_v1_resources_org_resource_v1_proto_rawDescData = file_api_org_service_v1_resources_org_resource_v1_proto_rawDesc
)

func file_api_org_service_v1_resources_org_resource_v1_proto_rawDescGZIP() []byte {
	file_api_org_service_v1_resources_org_resource_v1_proto_rawDescOnce.Do(func() {
		file_api_org_service_v1_resources_org_resource_v1_proto_rawDescData = protoimpl.X.CompressGZIP(file_api_org_service_v1_resources_org_resource_v1_proto_rawDescData)
	})
	return file_api_org_service_v1_resources_org_resource_v1_proto_rawDescData
}

var file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_api_org_service_v1_resources_org_resource_v1_proto_goTypes = []any{
	(*PingReq)(nil),                    // 0: saas.api.org.resourcev1.PingReq
	(*PingResp)(nil),                   // 1: saas.api.org.resourcev1.PingResp
	(*PingRespData)(nil),               // 2: saas.api.org.resourcev1.PingRespData
	(*Org)(nil),                        // 3: saas.api.org.resourcev1.Org
	(*CreateOrgReq)(nil),               // 4: saas.api.org.resourcev1.CreateOrgReq
	(*OnlyCreateOrgReq)(nil),           // 5: saas.api.org.resourcev1.OnlyCreateOrgReq
	(*CreateOrgResp)(nil),              // 6: saas.api.org.resourcev1.CreateOrgResp
	(*CreateOrgRespData)(nil),          // 7: saas.api.org.resourcev1.CreateOrgRespData
	(*AddEmployeeReq)(nil),             // 8: saas.api.org.resourcev1.AddEmployeeReq
	(*AddEmployeeResp)(nil),            // 9: saas.api.org.resourcev1.AddEmployeeResp
	(*AddEmployeeRespData)(nil),        // 10: saas.api.org.resourcev1.AddEmployeeRespData
	(*InviteEmployeeReq)(nil),          // 11: saas.api.org.resourcev1.InviteEmployeeReq
	(*InviteEmployeeResp)(nil),         // 12: saas.api.org.resourcev1.InviteEmployeeResp
	(*InviteEmployeeRespData)(nil),     // 13: saas.api.org.resourcev1.InviteEmployeeRespData
	nil,                                // 14: saas.api.org.resourcev1.PingResp.MetadataEntry
	nil,                                // 15: saas.api.org.resourcev1.CreateOrgResp.MetadataEntry
	nil,                                // 16: saas.api.org.resourcev1.AddEmployeeResp.MetadataEntry
	nil,                                // 17: saas.api.org.resourcev1.InviteEmployeeResp.MetadataEntry
	(enums.OrgTypeEnum_OrgType)(0),     // 18: saas.api.org.enumv1.OrgTypeEnum.OrgType
	(enums.OrgStatusEnum_OrgStatus)(0), // 19: saas.api.org.enumv1.OrgStatusEnum.OrgStatus
	(enums.OrgEmployeeRoleEnum_OrgEmployeeRole)(0),     // 20: saas.api.org.enumv1.OrgEmployeeRoleEnum.OrgEmployeeRole
	(enums.OrgEmployeeStatusEnum_OrgEmployeeStatus)(0), // 21: saas.api.org.enumv1.OrgEmployeeStatusEnum.OrgEmployeeStatus
}
var file_api_org_service_v1_resources_org_resource_v1_proto_depIdxs = []int32{
	14, // 0: saas.api.org.resourcev1.PingResp.metadata:type_name -> saas.api.org.resourcev1.PingResp.MetadataEntry
	2,  // 1: saas.api.org.resourcev1.PingResp.data:type_name -> saas.api.org.resourcev1.PingRespData
	18, // 2: saas.api.org.resourcev1.Org.org_type:type_name -> saas.api.org.enumv1.OrgTypeEnum.OrgType
	19, // 3: saas.api.org.resourcev1.Org.org_status:type_name -> saas.api.org.enumv1.OrgStatusEnum.OrgStatus
	18, // 4: saas.api.org.resourcev1.CreateOrgReq.org_type:type_name -> saas.api.org.enumv1.OrgTypeEnum.OrgType
	18, // 5: saas.api.org.resourcev1.OnlyCreateOrgReq.org_type:type_name -> saas.api.org.enumv1.OrgTypeEnum.OrgType
	15, // 6: saas.api.org.resourcev1.CreateOrgResp.metadata:type_name -> saas.api.org.resourcev1.CreateOrgResp.MetadataEntry
	7,  // 7: saas.api.org.resourcev1.CreateOrgResp.data:type_name -> saas.api.org.resourcev1.CreateOrgRespData
	18, // 8: saas.api.org.resourcev1.CreateOrgRespData.org_type:type_name -> saas.api.org.enumv1.OrgTypeEnum.OrgType
	20, // 9: saas.api.org.resourcev1.AddEmployeeReq.employee_role:type_name -> saas.api.org.enumv1.OrgEmployeeRoleEnum.OrgEmployeeRole
	16, // 10: saas.api.org.resourcev1.AddEmployeeResp.metadata:type_name -> saas.api.org.resourcev1.AddEmployeeResp.MetadataEntry
	10, // 11: saas.api.org.resourcev1.AddEmployeeResp.data:type_name -> saas.api.org.resourcev1.AddEmployeeRespData
	21, // 12: saas.api.org.resourcev1.AddEmployeeRespData.employee_status:type_name -> saas.api.org.enumv1.OrgEmployeeStatusEnum.OrgEmployeeStatus
	20, // 13: saas.api.org.resourcev1.AddEmployeeRespData.employee_role:type_name -> saas.api.org.enumv1.OrgEmployeeRoleEnum.OrgEmployeeRole
	17, // 14: saas.api.org.resourcev1.InviteEmployeeResp.metadata:type_name -> saas.api.org.resourcev1.InviteEmployeeResp.MetadataEntry
	13, // 15: saas.api.org.resourcev1.InviteEmployeeResp.data:type_name -> saas.api.org.resourcev1.InviteEmployeeRespData
	21, // 16: saas.api.org.resourcev1.InviteEmployeeRespData.employee_status:type_name -> saas.api.org.enumv1.OrgEmployeeStatusEnum.OrgEmployeeStatus
	20, // 17: saas.api.org.resourcev1.InviteEmployeeRespData.employee_role:type_name -> saas.api.org.enumv1.OrgEmployeeRoleEnum.OrgEmployeeRole
	18, // [18:18] is the sub-list for method output_type
	18, // [18:18] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_api_org_service_v1_resources_org_resource_v1_proto_init() }
func file_api_org_service_v1_resources_org_resource_v1_proto_init() {
	if File_api_org_service_v1_resources_org_resource_v1_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[0].Exporter = func(v any, i int) any {
			switch v := v.(*PingReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[1].Exporter = func(v any, i int) any {
			switch v := v.(*PingResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[2].Exporter = func(v any, i int) any {
			switch v := v.(*PingRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[3].Exporter = func(v any, i int) any {
			switch v := v.(*Org); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[4].Exporter = func(v any, i int) any {
			switch v := v.(*CreateOrgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[5].Exporter = func(v any, i int) any {
			switch v := v.(*OnlyCreateOrgReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[6].Exporter = func(v any, i int) any {
			switch v := v.(*CreateOrgResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[7].Exporter = func(v any, i int) any {
			switch v := v.(*CreateOrgRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[8].Exporter = func(v any, i int) any {
			switch v := v.(*AddEmployeeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[9].Exporter = func(v any, i int) any {
			switch v := v.(*AddEmployeeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[10].Exporter = func(v any, i int) any {
			switch v := v.(*AddEmployeeRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[11].Exporter = func(v any, i int) any {
			switch v := v.(*InviteEmployeeReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[12].Exporter = func(v any, i int) any {
			switch v := v.(*InviteEmployeeResp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes[13].Exporter = func(v any, i int) any {
			switch v := v.(*InviteEmployeeRespData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_api_org_service_v1_resources_org_resource_v1_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_api_org_service_v1_resources_org_resource_v1_proto_goTypes,
		DependencyIndexes: file_api_org_service_v1_resources_org_resource_v1_proto_depIdxs,
		MessageInfos:      file_api_org_service_v1_resources_org_resource_v1_proto_msgTypes,
	}.Build()
	File_api_org_service_v1_resources_org_resource_v1_proto = out.File
	file_api_org_service_v1_resources_org_resource_v1_proto_rawDesc = nil
	file_api_org_service_v1_resources_org_resource_v1_proto_goTypes = nil
	file_api_org_service_v1_resources_org_resource_v1_proto_depIdxs = nil
}
